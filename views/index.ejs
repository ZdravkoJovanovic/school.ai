<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>School AI</title>
  <link href="/styles.css" rel="stylesheet">
</head>
<body class="bg-[#020202] text-neutral-200 min-h-screen">
  <%- include('navbar/navbar') %>
  <div class="flex min-h-[calc(100vh-56px)]">
    <!-- Linke Fläche (70%) → Whiteboard -->
    <section class="w-[70%] p-4 hidden lg:flex">
      <div id="whiteboard-wrapper" class="bg-[#121318] rounded-2xl p-6 w-full flex">
        <div class="w-full h-[calc(100vh-56px-2rem)]">
          <canvas id="whiteboard-canvas" class="w-full h-full rounded-xl"></canvas>
        </div>
      </div>
    </section>

    <!-- Rechte Seite: Chat (30%), gleiche BG, clean -->
    <aside class="w-full lg:w-[30%] bg-[#020202] flex flex-col min-h-[calc(100vh-56px)] p-4">
      <!-- Mini-Header über dem Input (ca. 10px Abstand zur Navbar) -->
      <div class="flex items-center justify-between mb-2 mt-[10px]">
        <div class="bg-[#121318] border border-[#2a2a2a] rounded-md px-3 py-1 text-sm font-medium text-neutral-100">New Chat</div>
        <div class="flex items-center gap-3 text-neutral-400">
          <!-- Plus -->
          <button type="button" class="hover:text-white focus:outline-none" aria-label="Neu">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" class="w-4 h-4">
              <path d="M12 5v14M5 12h14"/>
            </svg>
          </button>
          <!-- History -->
          <button type="button" class="hover:text-white focus:outline-none" aria-label="Verlauf">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" class="w-4 h-4">
              <path d="M12 8v5l3 2"/>
              <circle cx="12" cy="12" r="9"/>
            </svg>
          </button>
          <!-- More -->
          <button type="button" class="hover:text-white focus:outline-none" aria-label="Mehr">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <circle cx="5" cy="12" r="1.5"/>
              <circle cx="12" cy="12" r="1.5"/>
              <circle cx="19" cy="12" r="1.5"/>
            </svg>
          </button>
          <!-- Close -->
          <button type="button" class="hover:text-white focus:outline-none" aria-label="Schließen">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" class="w-4 h-4">
              <path d="M6 6l12 12M18 6L6 18"/>
            </svg>
          </button>
        </div>
      </div>

      <!-- Eingabe -->
      <form id="chat-form" class="mb-4">
        <div class="relative w-full">
          <input id="chat-input" type="text" placeholder="Nachricht an School AI..." class="w-full rounded-md bg-[#121318] text-neutral-100 placeholder-neutral-500 outline-none focus:ring-2 focus:ring-[#2f3b47]  pl-3 pr-16 py-5 text-sm" />
          <!-- Bild-Icon im Feld -->
          <button type="button" aria-label="Bild auswählen" class="absolute right-10 top-1/2 -translate-y-1/2 text-neutral-300 hover:text-white focus:outline-none">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" class="w-5 h-5">
              <path d="M4.5 5.5h15a1.5 1.5 0 011.5 1.5v10a1.5 1.5 0 01-1.5 1.5h-15A1.5 1.5 0 013 17V7a1.5 1.5 0 011.5-1.5z"/>
              <path d="M7 14l2.2-2.2a1.5 1.5 0 012.1 0L13.5 14l1.5-1.5a1.5 1.5 0 012.1 0L19.5 15"/>
              <circle cx="8.5" cy="9" r="1.2"/>
            </svg>
          </button>
          <!-- Senden-Icon im Feld -->
          <button type="submit" aria-label="Senden" class="absolute right-3 top-1/2 -translate-y-1/2 text-white focus:outline-none">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <path d="M2.25 12l18-9-4.5 9 4.5 9-18-9z"/>
            </svg>
          </button>
        </div>
      </form>

      <!-- Nachrichtenliste darunter -->
      <div id="chat-messages" class="flex-1 overflow-y-auto space-y-4">
        <!-- Noch keine Nachrichten: leerer Startzustand -->
      </div>
    </aside>
  </div>

  <script>
    // Whiteboard Setup
    (function() {
      const canvas = document.getElementById('whiteboard-canvas');
      if (!canvas) return;
      const ctx = canvas.getContext('2d');
      let drawing = false;
      let lastX = 0, lastY = 0;

      function resizeCanvas() {
        const wrapper = document.getElementById('whiteboard-wrapper');
        if (!wrapper) return;
        const rect = wrapper.getBoundingClientRect();
        // Padding already applied; use inner div size
        const holder = wrapper.querySelector('div');
        const hRect = holder.getBoundingClientRect();
        const dpr = window.devicePixelRatio || 1;
        canvas.width = Math.floor(hRect.width * dpr);
        canvas.height = Math.floor(hRect.height * dpr);
        canvas.style.width = hRect.width + 'px';
        canvas.style.height = hRect.height + 'px';
        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);
        ctx.lineCap = 'round';
        ctx.lineJoin = 'round';
        ctx.lineWidth = 3;
        ctx.strokeStyle = '#ff3b30'; // Rot als Standardfarbe
      }

      function startDraw(x, y) { drawing = true; [lastX, lastY] = [x, y]; }
      function draw(x, y) {
        if (!drawing) return;
        ctx.beginPath();
        ctx.moveTo(lastX, lastY);
        ctx.lineTo(x, y);
        ctx.stroke();
        [lastX, lastY] = [x, y];
      }
      function stopDraw() { drawing = false; }

      // Mouse
      canvas.addEventListener('mousedown', e => startDraw(e.offsetX, e.offsetY));
      canvas.addEventListener('mousemove', e => draw(e.offsetX, e.offsetY));
      window.addEventListener('mouseup', stopDraw);
      canvas.addEventListener('mouseleave', stopDraw);
      // Touch
      canvas.addEventListener('touchstart', e => {
        const t = e.touches[0];
        const rect = canvas.getBoundingClientRect();
        startDraw(t.clientX - rect.left, t.clientY - rect.top);
      }, { passive: true });
      canvas.addEventListener('touchmove', e => {
        const t = e.touches[0];
        const rect = canvas.getBoundingClientRect();
        draw(t.clientX - rect.left, t.clientY - rect.top);
      }, { passive: true });
      canvas.addEventListener('touchend', stopDraw);

      window.addEventListener('resize', resizeCanvas);
      resizeCanvas();
    })();

    // Nur UI-Demo: lokale Anzeige gesendeter Nachrichten
    const form = document.getElementById('chat-form');
    const input = document.getElementById('chat-input');
    const list = document.getElementById('chat-messages');

    form?.addEventListener('submit', (e) => {
      e.preventDefault();
      const text = input.value.trim();
      if (!text) return;

      const wrapper = document.createElement('div');
      wrapper.className = 'flex gap-3 justify-end px-1';
      wrapper.innerHTML = `
        <div class=\"max-w-[80%]\">
          <div class=\"text-xs text-neutral-400 mb-1 text-right\">Du</div>
          <div class=\"bg-[#08090c] rounded-lg p-3 text-sm leading-relaxed text-neutral-100\">${text.replace(/</g,'&lt;')}</div>
        </div>
      `;
      list.appendChild(wrapper);
      list.scrollTop = list.scrollHeight;
      input.value = '';
      input.focus();
    });
  </script>
</body>
</html>
